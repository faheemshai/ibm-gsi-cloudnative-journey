{"componentChunkName":"component---src-pages-getting-started-devenvsetup-index-mdx","path":"/getting-started/devenvsetup/","result":{"pageContext":{"frontmatter":{"title":"Developer Tools Setup"},"relativePagePath":"/getting-started/devenvsetup/index.mdx","titleType":"page","MdxNode":{"id":"e93fc6f1-8fc1-53d9-a43d-6d54969fe275","children":[],"parent":"1a854597-d079-5a42-9672-f9392a51ef86","internal":{"content":"---\ntitle: Developer Tools Setup\n---\n\nTo enable the best working experience through the hands-on exercises, you\n need to select the environment you plan to use for development and the required tools for integration with IBM Cloud.\n\n- If you plan to use your desktop/laptop for hands-on exercises, follow\n the instructions in the Desktop/Laptop tab. You will need a recent macOS or\n  Windows 10 operating system for this option.\n- If you cannot install tools on your desktop/laptop, follow the Cloud Shell\n instructions.\n- If you want to try the full web IDE experience, then follow the Code Ready\n Workspaces setup instructions.\n\nOnce you have fulfilled these setup requirements you will be ready to\n start the **Developer Intermediate** agenda.\n\n<Tabs>\n\n<Tab label=\"Cloud Shell\">\n\n## Introduction to Cloud Shell\n\nIBM Cloud Shell is a free service that gives you complete control of your cloud resources, applications, and infrastructure, from any web browser. It's instantly accessible from your free IBM Cloud account--no other installation is needed.\n\nFeatures of IBM Cloud Shell include:\n\n- Preconfigured environment: IBM Cloud Shell provides a curated, cloud-based workspace with dozens of preinstalled tools and programming languages. It's automatically authenticated with your IBM Cloud account so you can start to develop immediately.\n\n- File upload/download: use this feature to import files to IBM Cloud Shell or pull-down data to your local machine.\n\n- Multiple sessions: use up to five shell sessions at a time to maximize your productivity. Mirror workflows on your local machine, or view logs on one session while editing a file in another.\n\n\n\n### Accessing the Cloud Shell\n\n- Open the IBM Cloud console (cloud.ibm.com) in your browser and log in if needed.\n\n- Invoke Cloud Shell by clicking on the button at the top, right-hand corner of the browser window.\n\n   ![Invoke Cloud Shell](./images/invokecloudshell.png)\n\n### Cloud Shell setup\n    \nWe have provided a simplified installer that will install tools and configure the shell environment. The\ninstaller will first check if the required tool is available in the path. If not, the missing tool(s) will be\ninstalled into the `bin/` folder of the current user's home directory and the `PATH` variable will be updated in the\n`.bashrc` or `.zshrc` file to include that directory.\n\nThe following tools are included in the shell installer:\n\n- IBM Cloud cli (ibmcloud)\n- ArgoCD cli (argocd)\n- Tekton cli (tkn)\n- IBM Cloud fast switching (icc)\n- kube-ps1 prompt\n- OpenShift cli (oc)\n- Kubernetes cli (kubectl)\n- JSON cli (jq)\n- IBM Garage Cloud CLI (igc)\n\n1. Set up the shell environment by running:\n    ```shell\n    curl -sL shell.cloudnativetoolkit.dev | sh - && . ~/.bashrc\n    ```\n\n2. If successful, you should see something like the following:\n    ```shell\n    Downloading scripts: https://github.com/ibm-garage-cloud/cloud-shell-commands/releases/download/0.3.5/assets.tar.gz\n    ** Installing argocd cli\n    ** Installing tkn cli\n    ** Installing kube-ps1\n    ** Installing icc\n    ** Installing Cloud-Native Toolkit cli\n    ```\n\n3. You can check the shell was installed correctly by checking the `oc` version:\n    ```shell\n    oc sync --version\n    ```\n\n\n</Tab>\n\n<Tab label=\"Gitpod\">\n\n## Gitpod\n\nGitpod provides continuous development environments for common code hosting platforms flows.\nIt's is based on Theia, an open-source IDE. Its features include:\n- Parallel sessions: you can open up to 4 parallel workspaces with 4 different git repositories at a time.\n- Share running workspaces: you can share your live running workspaces with others so they can see the same processes that you are looking at. This makes it easier to collaborate, and to help to resolve issues. \n- Snapshots: You can take a snapshot of your workspace. It can be used to share some complicated, difficult-to-reproduce issues with teammates or to save your workspace at a specific point.\n- Ports: gives you the option of making the public or private.\n- Git integration: allows pull requests and code reviews to be easily managed from the IDE.\n\n\n### Gitpod Access:\n\nGitpod is available as an extension in Chrome and Firefox:\n- Chrome: https://chrome.google.com/webstore/detail/gitpod-dev-environments-i/dodmmooeoklaejobgleioelladacbeki.\n\n- Firefox: https://addons.mozilla.org/en-US/firefox/addon/gitpod/.\n\nYou can also access Gitpod by prefixing your GitHub/GitLab/BitBucket repository URL with \"https://gitpod.io/#\".\n\nBoth options will display a Gitpod button to access the Gitpod workspace of that code repository.\n![Gitpod](./images/gitpod.png)\n\n### Gitpod Setup:\n\nExecute the following steps in the same order on the Gitpod terminal:\n\n- Gitpod only allows to the `/workspace` folder. Create a `bin` folder inside `/workspace` with appropriate permissions to install the required tools:\n  ```bash\n     cd /workspace\n     mkdir -m 755 bin\n     cd bin\n  ```\n\n- Install IBM Cloud:\n\n  ```bash\n     wget https://clis.cloud.ibm.com/download/bluemix-cli/1.2.2/linux64/archive\n     tar -xvf archive\n     cd IBM_Cloud_CLI\n     cp ibmcloud ../\n     cp ibmcloud-analytics ../\n  ```   \n\n- Install `kubectl`, IBM Cloud plugins, and `oc`:\n\n   ```bash\n      cd /workspace/bin\n      curl -sL https://ibm.biz/idt-installer | bash\n   ```\n\n   Navigate to the OpenShift Console page.\n  Click on QuestionMark(?) icon and select Command Line Tools.\n\n  ![ocinstall](./images/gitpod_ocinstall.png)\n\n  Go to \"Download oc for Linux for x86_64\" under oc and copy the download link.\n  Download it using wget command.\n  Eg:  wget https://downloads-openshift-console.appdev-cloud-native-ocp-2ab66b053c14936810608de9a1deac9c-0000.eu-gb.containers.appdomain.cloud/amd64/linux/oc.tar \n  Untar the oc installer in /workspace/bin folder: \n  \n  ```bash\n     cd /workspace/bin\n     wget <oc_installer_download_link>\n     tar -xvf oc.tar\n  ```\n\n- Install `igc` by running the following commands on terminal:\n  \n  ```bash\n     git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n     export PATH=~/cloud-shell-commands:$PATH\n     source ./cloud-shell-commands/install.sh\n  ```\n\n- A successful output will look like the following:\n\n    ```bash\n       $ git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n       Cloning into 'cloud-shell-commands'...\n       remote: Enumerating objects: 50, done.\n       remote: Counting objects: 100% (50/50), done.\n       remote: Compressing objects: 100% (44/44), done.\n       remote: Total 50 (delta 23), reused 14 (delta 4), pack-reused 0\n          Unpacking objects: 100% (50/50), done.\n       Checking connectivity... done.\n       $ export PATH=~/cloud-shell-commands:$PATH\n       $ source ./cloud-shell-commands/install.sh\n       npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\n       npm WARN deprecated har-validator@5.1.5: this library is no longer supported\n       /home/ramragh1/.npm/bin/igc -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n       /home/ramragh1/.npm/bin/kubectl-dashboard -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-dashboard.js\n       /home/ramragh1/.npm/bin/kubectl-console -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-console.js\n       /home/ramragh1/.npm/bin/kubectl-enable -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-enable.js\n       /home/ramragh1/.npm/bin/kubectl-git -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-git.js\n       /home/ramragh1/.npm/bin/kubectl-endpoints -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-endpoints.js\n       /home/ramragh1/.npm/bin/kubectl-pipeline -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-pipeline.js\n       /home/ramragh1/.npm/bin/kubectl-git-secret -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-git-secret.js\n       /home/ramragh1/.npm/bin/kubectl-sync -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-namespace.js\n       /home/ramragh1/.npm/bin/kubectl-tool-config -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-tool-config.js\n       /home/ramragh1/.npm/bin/kubectl-igc -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n       /home/ramragh1/.npm/bin/kubectl-credentials -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-credentials.js\n       > jsonpath@1.0.2 postinstall /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/node_modules/jsonpath\n       > node lib/aesprim.js > generated/aesprim-browser.js\n\n       npm WARN ws@7.3.1 requires a peer of bufferutil@^4.0.1 but none is installed. You must install peer dependencies yourself.\n       npm WARN ws@7.3.1 requires a peer of utf-8-validate@^5.0.2 but none is installed. You must install peer dependencies yourself.\n\n       + @ibmgaragecloud/cloud-native-toolkit-cli@1.0.1\n       added 354 packages from 390 contributors in 26.049s\n    ```\n\n- Add the `bin` directory to the path and set execution permissions so the commands are available:   \n  ```bash \n     echo $PATH\n     export PATH=$PATH:$PWD\n     cd ../\n     chmod -R 755 bin\n   ```\n\n</Tab>\n\n<Tab label=\"Desktop/Laptop\">\n\n## Tools installation\n\nThe following tools are required:\n\n- [Git Client](https://git-scm.com/): needs to be installed in your development operating system, it comes as standard for Mac OS.\n\n- [IBM Cloud CLI](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started): required for the management of your IBM Cloud Account, and managed IBM Kubernetes and Red Hat OpenShift clusters\n    - Aside from installing the [IBM Cloud CLI](https://cloud.ibm.com/docs/cli?topic=cloud-cli-install-ibmcloud-cli), you will need to install the [IBM Cloud CLI and Developer Tools](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started#step1-install-idt) too:\n    ```bash\n    $ curl -sL https://ibm.biz/idt-installer | bash\n    ```\n    - Note: if you log in to the web UI using SSO, you'll need to [create an API key](https://cloud.ibm.com/docs/account?topic=account-userapikey&interface=ui#create_user_key) to log in to the CLI. You can also use this API key for installing the Developer Tools environment.\n\n- [OpenShift OC CLI](https://mirror.openshift.com/pub/openshift-v4/clients/oc/): required for Red Hat OpenShift management and development, select 4.3.18 or later version.\n    - Place `oc` and `kubectl` in your Terminal `PATH`:\n\n    - #### MacOS/Linux\n    - Once downloaded navigate to the `Download` folder:\n    ```bash\n    $ cd ~/Downloads/openshift-origin-client-tools-v3/\n    ```\n    - Then copy `oc` and `kubectl` to the system-wide available scripts folder (which is already in your PATH).\n    ```bash\n    $ cp kubectl /usr/local/bin/kubectl\n    $ cp oc /usr/local/bin/oc\n    ```\n\n    <InlineNotification >\n\n     Depending on your macOS security settings you may need to allow access to `oc` and `kubectl`, go to `System Preferences`=>`Security & Privacy` and press `Allow Anyway`.\n    </InlineNotification>\n\n- [Docker Desktop](https://www.docker.com/products/docker-desktop): required for running common tools and Developer Tools Image.\n    - Installed and running on your local machine.\n\n- [Node](https://nodejs.org/en/): required for running the [IBM Garage for Cloud CLI](https://cloudnativetoolkit.dev/reference/cli).\n    - Installed on your local machine.\n    - Recommended: `v12.x LTS`.\n\n- [IBM Garage for Cloud CLI](https://cloudnativetoolkit.dev/reference/cli): used to help make working with the development tools as easy as possible.\n    ```bash \n    $ npm i -g @ibmgaragecloud/cloud-native-toolkit-cli\n    ```\n\n- [Tekton CLI](https://github.com/tektoncd/cli): used to help control Tekton\n pipelines from the command line.\n    ```\n    $ brew tap tektoncd/tools\n    $ brew install tektoncd/tools/tektoncd-cli\n  ```\n\n- [Visual Studio Code](https://code.visualstudio.com/download): a popular code editor\n    - You will need to edit some files, having a good quality editor is a good practice.\n    - Enabling [launching VSCode from a terminal](https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line).\n\n- [JDK 11](https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html) (_optional_): installed on your local machine.\n    - Used for SpringBoot content.\n\n</Tab>\n\n<Tab label=\"Code Ready Workspaces\">\n\n## CodeReady Workspace\nCodeReady Workspaces (CRW) is a developer workspace server and cloud IDE. Workspaces are defined as the project's code files and all of their required dependencies to edit, build, run, and debug it. Each workspace has its private and full-featured IDE hosted within it. This IDE is accessible through a single-page web application you can run in your web browser.\n\n Red Hat CodeReady Workspaces provides:\n - Workspaces that include runtimes and browser-based IDEs.\n - RESTful workspace server.\n - Plugins for languages, frameworks, and tools.\n - An SDK for creating plugins and assemblies.\n\n### CRW IDE\nCodeReady Workspaces includes a powerful in-browser IDE with support for Microsoft Visual Studio Code extensions. As part of the workshop, we need only a machine capable of running a web browser through which CRW will provide an integrated environment to access the code repository and the build environment required to develop the application, and then test and deploy it on an OpenShift environment.\n\n### Setting up your Workspace on CRW\n\n- Log in to the OpenShift Cluster through the Web console, where the Code Ready Workspace is set up.\n\n- Access the Code Ready Workspace through the URL that has been shared with you.\n**Note**: if the code ready workspace is configured through OpenShift oAuth, you can access the above URL once you have logged into the OpenShift Cluster.\n\n- You will need to register the first time you access the Code Ready Workspace. The user name can contain only Latin lowercase characters (a-z), digits, and hyphens in between.\nEnsure you provide your user name, email, first name, and last name. If SSO is not configured, you will need to provide the password as well.\n\n- Navigate to the default Code Ready Workspace link  on your browser as shown in the picture below.\n\n  ![CRW](./images/CRW_HomePage.png)\n\n- You can create the workspace by selecting one of the template stacks. Alternatively, you can navigate to the Workspace and click on the \"Add Workspace\" button.\n\n  ![Adding Workspace](./images/AddWorkspace.png)\n\n- Provide the workspace as part of the Name field. In the Projects section click on the \"Remove\" button to remove the project template thus creating an empty project.\n\n  ![Creating Project with Empty Template](./images/CreatingNewWorkspace.png)\n\n- Click on the \"Create and Open\" button to create and load the workspace. This may take a few minutes as the Container and plug-ins related to the stack has to be created and deployed.\n\n- Once the workspace is loaded, you can see the Visual Studio Code editor:\n\n  ![CRWWorkspace](./images/CRWScreen.png)\n\n- Go to the \"Terminal\" menu and select \"Open Terminal in specific container\".\n\n  ![Open Terminal](./images/OpeningTerminal.png)\n\n- Select the \"Developer Container\".\n\n- Install `igc` by running the following commands on the newly opened terminal:\n    ```bash\n    $ git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    $ export PATH=~/cloud-shell-commands:$PATH\n    $ source ./cloud-shell-commands/install.sh\n    ```\n- Successful installation will look something like this:\n    ```bash\n    $ git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    Cloning into 'cloud-shell-commands'...\n    remote: Enumerating objects: 50, done.\n    remote: Counting objects: 100% (50/50), done.\n    remote: Compressing objects: 100% (44/44), done.\n    remote: Total 50 (delta 23), reused 14 (delta 4), pack-reused 0\n        Unpacking objects: 100% (50/50), done.\n    Checking connectivity... done.\n    $ export PATH=~/cloud-shell-commands:$PATH\n    $ source ./cloud-shell-commands/install.sh\n    npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\n    npm WARN deprecated har-validator@5.1.5: this library is no longer supported\n    /home/ramragh1/.npm/bin/igc -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n    /home/ramragh1/.npm/bin/kubectl-dashboard -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-dashboard.js\n    /home/ramragh1/.npm/bin/kubectl-console -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-console.js\n    /home/ramragh1/.npm/bin/kubectl-enable -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-enable.js\n    /home/ramragh1/.npm/bin/kubectl-git -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-git.js\n    /home/ramragh1/.npm/bin/kubectl-endpoints -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-endpoints.js\n    /home/ramragh1/.npm/bin/kubectl-pipeline -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-pipeline.js\n    /home/ramragh1/.npm/bin/kubectl-git-secret -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-git-secret.js\n    /home/ramragh1/.npm/bin/kubectl-sync -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-namespace.js\n    /home/ramragh1/.npm/bin/kubectl-tool-config -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-tool-config.js\n    /home/ramragh1/.npm/bin/kubectl-igc -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n    /home/ramragh1/.npm/bin/kubectl-credentials -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-credentials.js\n    > jsonpath@1.0.2 postinstall /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/node_modules/jsonpath\n    > node lib/aesprim.js > generated/aesprim-browser.js\n\n    npm WARN ws@7.3.1 requires a peer of bufferutil@^4.0.1 but none is installed. You must install peer dependencies yourself.\n    npm WARN ws@7.3.1 requires a peer of utf-8-validate@^5.0.2 but none is installed. You must install peer dependencies yourself.\n\n    + @ibmgaragecloud/cloud-native-toolkit-cli@1.0.1\n    added 354 packages from 390 contributors in 26.049s\n\n    ```\n- You can check the CLI tools package was installed correctly by checking the `oc` version:\n    ```\n    $ oc sync --version\n    1.0.1\n    ```\n\n</Tab>\n\n</Tabs>\n\n## Log in to IBM Cloud\n\n- Use the `ibmcloud` command to log in to the cloud account. Replace the user_id, password and team name with the sandbox ones:\n    ```bash\n    $ ibmcloud login -u <user_id> -p <password> -g <workshop-team> -r us-south\n    ```\n\n- Select the account number you have been assigned to:\n    ```bash\n    $ ibmcloud login -u email@company.com -p XXX -g workshop-team-one -r us-south\n    API endpoint: https://cloud.ibm.com\n    Authenticating...\n    OK\n\n    Select an account:\n    1. GSI Labs - IBM\n    Enter a number> 1\n    Targeted account GSI Labs\n\n    Targeted resource group workshop-team-one\n\n    Targeted region us-south\n\n    API endpoint:      https://cloud.ibm.com\n    Region:            us-south\n    User:              email@company.com\n    Account:           GSI Labs\n    Resource group:    workshop-team-one\n    CF API endpoint:\n    Org:\n    Space:\n\n    ```\n\n## Log in to OpenShift Cluster\n\n- Log in to OpenShift Cluster from the cloud console:\n    ![OpenShift](./images/openshiftcluster.png)\n\n- Access the OpenShift console by clicking on the button:\n    ![OpenShift Console](./images/openshiftconsole.png)\n\n- Get the OpenShift login command, which includes a token:\n    ![OpenShift Login](./images/LoginCommand.png)\n\n- Run the login command in the terminal:\n    ```bash\n    $ oc login --token=qvARHflZDlOYfjJZRJUEs53Yfy4F8aa6_L3ezoagQFM --server=https://c103-e.us-south.containers.cloud.ibm.com:30979\n    Logged into \"https://c103-e.us-south.containers.cloud.ibm.com:30979\" as \"IAM#email@company\" using the token provided.\n\n    You have access to 71 projects, the list has been suppressed. You can list all projects with 'oc projects'\n\n    Using project \"dev-ab\".\n    ```\n\n### Configure git\n\n- Execute the following commands replacing the email and short name:\n\n  ```\n  $ git config --global user.email \"<email>\"\n  $ git config --global user.name \"<short_name>\"\n  ```\n","type":"Mdx","contentDigest":"4f3f230e8d02df220e4137a5c985b855","owner":"gatsby-plugin-mdx","counter":1032},"frontmatter":{"title":"Developer Tools Setup"},"exports":{},"rawBody":"---\ntitle: Developer Tools Setup\n---\n\nTo enable the best working experience through the hands-on exercises, you\n need to select the environment you plan to use for development and the required tools for integration with IBM Cloud.\n\n- If you plan to use your desktop/laptop for hands-on exercises, follow\n the instructions in the Desktop/Laptop tab. You will need a recent macOS or\n  Windows 10 operating system for this option.\n- If you cannot install tools on your desktop/laptop, follow the Cloud Shell\n instructions.\n- If you want to try the full web IDE experience, then follow the Code Ready\n Workspaces setup instructions.\n\nOnce you have fulfilled these setup requirements you will be ready to\n start the **Developer Intermediate** agenda.\n\n<Tabs>\n\n<Tab label=\"Cloud Shell\">\n\n## Introduction to Cloud Shell\n\nIBM Cloud Shell is a free service that gives you complete control of your cloud resources, applications, and infrastructure, from any web browser. It's instantly accessible from your free IBM Cloud account--no other installation is needed.\n\nFeatures of IBM Cloud Shell include:\n\n- Preconfigured environment: IBM Cloud Shell provides a curated, cloud-based workspace with dozens of preinstalled tools and programming languages. It's automatically authenticated with your IBM Cloud account so you can start to develop immediately.\n\n- File upload/download: use this feature to import files to IBM Cloud Shell or pull-down data to your local machine.\n\n- Multiple sessions: use up to five shell sessions at a time to maximize your productivity. Mirror workflows on your local machine, or view logs on one session while editing a file in another.\n\n\n\n### Accessing the Cloud Shell\n\n- Open the IBM Cloud console (cloud.ibm.com) in your browser and log in if needed.\n\n- Invoke Cloud Shell by clicking on the button at the top, right-hand corner of the browser window.\n\n   ![Invoke Cloud Shell](./images/invokecloudshell.png)\n\n### Cloud Shell setup\n    \nWe have provided a simplified installer that will install tools and configure the shell environment. The\ninstaller will first check if the required tool is available in the path. If not, the missing tool(s) will be\ninstalled into the `bin/` folder of the current user's home directory and the `PATH` variable will be updated in the\n`.bashrc` or `.zshrc` file to include that directory.\n\nThe following tools are included in the shell installer:\n\n- IBM Cloud cli (ibmcloud)\n- ArgoCD cli (argocd)\n- Tekton cli (tkn)\n- IBM Cloud fast switching (icc)\n- kube-ps1 prompt\n- OpenShift cli (oc)\n- Kubernetes cli (kubectl)\n- JSON cli (jq)\n- IBM Garage Cloud CLI (igc)\n\n1. Set up the shell environment by running:\n    ```shell\n    curl -sL shell.cloudnativetoolkit.dev | sh - && . ~/.bashrc\n    ```\n\n2. If successful, you should see something like the following:\n    ```shell\n    Downloading scripts: https://github.com/ibm-garage-cloud/cloud-shell-commands/releases/download/0.3.5/assets.tar.gz\n    ** Installing argocd cli\n    ** Installing tkn cli\n    ** Installing kube-ps1\n    ** Installing icc\n    ** Installing Cloud-Native Toolkit cli\n    ```\n\n3. You can check the shell was installed correctly by checking the `oc` version:\n    ```shell\n    oc sync --version\n    ```\n\n\n</Tab>\n\n<Tab label=\"Gitpod\">\n\n## Gitpod\n\nGitpod provides continuous development environments for common code hosting platforms flows.\nIt's is based on Theia, an open-source IDE. Its features include:\n- Parallel sessions: you can open up to 4 parallel workspaces with 4 different git repositories at a time.\n- Share running workspaces: you can share your live running workspaces with others so they can see the same processes that you are looking at. This makes it easier to collaborate, and to help to resolve issues. \n- Snapshots: You can take a snapshot of your workspace. It can be used to share some complicated, difficult-to-reproduce issues with teammates or to save your workspace at a specific point.\n- Ports: gives you the option of making the public or private.\n- Git integration: allows pull requests and code reviews to be easily managed from the IDE.\n\n\n### Gitpod Access:\n\nGitpod is available as an extension in Chrome and Firefox:\n- Chrome: https://chrome.google.com/webstore/detail/gitpod-dev-environments-i/dodmmooeoklaejobgleioelladacbeki.\n\n- Firefox: https://addons.mozilla.org/en-US/firefox/addon/gitpod/.\n\nYou can also access Gitpod by prefixing your GitHub/GitLab/BitBucket repository URL with \"https://gitpod.io/#\".\n\nBoth options will display a Gitpod button to access the Gitpod workspace of that code repository.\n![Gitpod](./images/gitpod.png)\n\n### Gitpod Setup:\n\nExecute the following steps in the same order on the Gitpod terminal:\n\n- Gitpod only allows to the `/workspace` folder. Create a `bin` folder inside `/workspace` with appropriate permissions to install the required tools:\n  ```bash\n     cd /workspace\n     mkdir -m 755 bin\n     cd bin\n  ```\n\n- Install IBM Cloud:\n\n  ```bash\n     wget https://clis.cloud.ibm.com/download/bluemix-cli/1.2.2/linux64/archive\n     tar -xvf archive\n     cd IBM_Cloud_CLI\n     cp ibmcloud ../\n     cp ibmcloud-analytics ../\n  ```   \n\n- Install `kubectl`, IBM Cloud plugins, and `oc`:\n\n   ```bash\n      cd /workspace/bin\n      curl -sL https://ibm.biz/idt-installer | bash\n   ```\n\n   Navigate to the OpenShift Console page.\n  Click on QuestionMark(?) icon and select Command Line Tools.\n\n  ![ocinstall](./images/gitpod_ocinstall.png)\n\n  Go to \"Download oc for Linux for x86_64\" under oc and copy the download link.\n  Download it using wget command.\n  Eg:  wget https://downloads-openshift-console.appdev-cloud-native-ocp-2ab66b053c14936810608de9a1deac9c-0000.eu-gb.containers.appdomain.cloud/amd64/linux/oc.tar \n  Untar the oc installer in /workspace/bin folder: \n  \n  ```bash\n     cd /workspace/bin\n     wget <oc_installer_download_link>\n     tar -xvf oc.tar\n  ```\n\n- Install `igc` by running the following commands on terminal:\n  \n  ```bash\n     git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n     export PATH=~/cloud-shell-commands:$PATH\n     source ./cloud-shell-commands/install.sh\n  ```\n\n- A successful output will look like the following:\n\n    ```bash\n       $ git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n       Cloning into 'cloud-shell-commands'...\n       remote: Enumerating objects: 50, done.\n       remote: Counting objects: 100% (50/50), done.\n       remote: Compressing objects: 100% (44/44), done.\n       remote: Total 50 (delta 23), reused 14 (delta 4), pack-reused 0\n          Unpacking objects: 100% (50/50), done.\n       Checking connectivity... done.\n       $ export PATH=~/cloud-shell-commands:$PATH\n       $ source ./cloud-shell-commands/install.sh\n       npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\n       npm WARN deprecated har-validator@5.1.5: this library is no longer supported\n       /home/ramragh1/.npm/bin/igc -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n       /home/ramragh1/.npm/bin/kubectl-dashboard -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-dashboard.js\n       /home/ramragh1/.npm/bin/kubectl-console -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-console.js\n       /home/ramragh1/.npm/bin/kubectl-enable -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-enable.js\n       /home/ramragh1/.npm/bin/kubectl-git -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-git.js\n       /home/ramragh1/.npm/bin/kubectl-endpoints -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-endpoints.js\n       /home/ramragh1/.npm/bin/kubectl-pipeline -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-pipeline.js\n       /home/ramragh1/.npm/bin/kubectl-git-secret -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-git-secret.js\n       /home/ramragh1/.npm/bin/kubectl-sync -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-namespace.js\n       /home/ramragh1/.npm/bin/kubectl-tool-config -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-tool-config.js\n       /home/ramragh1/.npm/bin/kubectl-igc -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n       /home/ramragh1/.npm/bin/kubectl-credentials -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-credentials.js\n       > jsonpath@1.0.2 postinstall /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/node_modules/jsonpath\n       > node lib/aesprim.js > generated/aesprim-browser.js\n\n       npm WARN ws@7.3.1 requires a peer of bufferutil@^4.0.1 but none is installed. You must install peer dependencies yourself.\n       npm WARN ws@7.3.1 requires a peer of utf-8-validate@^5.0.2 but none is installed. You must install peer dependencies yourself.\n\n       + @ibmgaragecloud/cloud-native-toolkit-cli@1.0.1\n       added 354 packages from 390 contributors in 26.049s\n    ```\n\n- Add the `bin` directory to the path and set execution permissions so the commands are available:   \n  ```bash \n     echo $PATH\n     export PATH=$PATH:$PWD\n     cd ../\n     chmod -R 755 bin\n   ```\n\n</Tab>\n\n<Tab label=\"Desktop/Laptop\">\n\n## Tools installation\n\nThe following tools are required:\n\n- [Git Client](https://git-scm.com/): needs to be installed in your development operating system, it comes as standard for Mac OS.\n\n- [IBM Cloud CLI](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started): required for the management of your IBM Cloud Account, and managed IBM Kubernetes and Red Hat OpenShift clusters\n    - Aside from installing the [IBM Cloud CLI](https://cloud.ibm.com/docs/cli?topic=cloud-cli-install-ibmcloud-cli), you will need to install the [IBM Cloud CLI and Developer Tools](https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started#step1-install-idt) too:\n    ```bash\n    $ curl -sL https://ibm.biz/idt-installer | bash\n    ```\n    - Note: if you log in to the web UI using SSO, you'll need to [create an API key](https://cloud.ibm.com/docs/account?topic=account-userapikey&interface=ui#create_user_key) to log in to the CLI. You can also use this API key for installing the Developer Tools environment.\n\n- [OpenShift OC CLI](https://mirror.openshift.com/pub/openshift-v4/clients/oc/): required for Red Hat OpenShift management and development, select 4.3.18 or later version.\n    - Place `oc` and `kubectl` in your Terminal `PATH`:\n\n    - #### MacOS/Linux\n    - Once downloaded navigate to the `Download` folder:\n    ```bash\n    $ cd ~/Downloads/openshift-origin-client-tools-v3/\n    ```\n    - Then copy `oc` and `kubectl` to the system-wide available scripts folder (which is already in your PATH).\n    ```bash\n    $ cp kubectl /usr/local/bin/kubectl\n    $ cp oc /usr/local/bin/oc\n    ```\n\n    <InlineNotification >\n\n     Depending on your macOS security settings you may need to allow access to `oc` and `kubectl`, go to `System Preferences`=>`Security & Privacy` and press `Allow Anyway`.\n    </InlineNotification>\n\n- [Docker Desktop](https://www.docker.com/products/docker-desktop): required for running common tools and Developer Tools Image.\n    - Installed and running on your local machine.\n\n- [Node](https://nodejs.org/en/): required for running the [IBM Garage for Cloud CLI](https://cloudnativetoolkit.dev/reference/cli).\n    - Installed on your local machine.\n    - Recommended: `v12.x LTS`.\n\n- [IBM Garage for Cloud CLI](https://cloudnativetoolkit.dev/reference/cli): used to help make working with the development tools as easy as possible.\n    ```bash \n    $ npm i -g @ibmgaragecloud/cloud-native-toolkit-cli\n    ```\n\n- [Tekton CLI](https://github.com/tektoncd/cli): used to help control Tekton\n pipelines from the command line.\n    ```\n    $ brew tap tektoncd/tools\n    $ brew install tektoncd/tools/tektoncd-cli\n  ```\n\n- [Visual Studio Code](https://code.visualstudio.com/download): a popular code editor\n    - You will need to edit some files, having a good quality editor is a good practice.\n    - Enabling [launching VSCode from a terminal](https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line).\n\n- [JDK 11](https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html) (_optional_): installed on your local machine.\n    - Used for SpringBoot content.\n\n</Tab>\n\n<Tab label=\"Code Ready Workspaces\">\n\n## CodeReady Workspace\nCodeReady Workspaces (CRW) is a developer workspace server and cloud IDE. Workspaces are defined as the project's code files and all of their required dependencies to edit, build, run, and debug it. Each workspace has its private and full-featured IDE hosted within it. This IDE is accessible through a single-page web application you can run in your web browser.\n\n Red Hat CodeReady Workspaces provides:\n - Workspaces that include runtimes and browser-based IDEs.\n - RESTful workspace server.\n - Plugins for languages, frameworks, and tools.\n - An SDK for creating plugins and assemblies.\n\n### CRW IDE\nCodeReady Workspaces includes a powerful in-browser IDE with support for Microsoft Visual Studio Code extensions. As part of the workshop, we need only a machine capable of running a web browser through which CRW will provide an integrated environment to access the code repository and the build environment required to develop the application, and then test and deploy it on an OpenShift environment.\n\n### Setting up your Workspace on CRW\n\n- Log in to the OpenShift Cluster through the Web console, where the Code Ready Workspace is set up.\n\n- Access the Code Ready Workspace through the URL that has been shared with you.\n**Note**: if the code ready workspace is configured through OpenShift oAuth, you can access the above URL once you have logged into the OpenShift Cluster.\n\n- You will need to register the first time you access the Code Ready Workspace. The user name can contain only Latin lowercase characters (a-z), digits, and hyphens in between.\nEnsure you provide your user name, email, first name, and last name. If SSO is not configured, you will need to provide the password as well.\n\n- Navigate to the default Code Ready Workspace link  on your browser as shown in the picture below.\n\n  ![CRW](./images/CRW_HomePage.png)\n\n- You can create the workspace by selecting one of the template stacks. Alternatively, you can navigate to the Workspace and click on the \"Add Workspace\" button.\n\n  ![Adding Workspace](./images/AddWorkspace.png)\n\n- Provide the workspace as part of the Name field. In the Projects section click on the \"Remove\" button to remove the project template thus creating an empty project.\n\n  ![Creating Project with Empty Template](./images/CreatingNewWorkspace.png)\n\n- Click on the \"Create and Open\" button to create and load the workspace. This may take a few minutes as the Container and plug-ins related to the stack has to be created and deployed.\n\n- Once the workspace is loaded, you can see the Visual Studio Code editor:\n\n  ![CRWWorkspace](./images/CRWScreen.png)\n\n- Go to the \"Terminal\" menu and select \"Open Terminal in specific container\".\n\n  ![Open Terminal](./images/OpeningTerminal.png)\n\n- Select the \"Developer Container\".\n\n- Install `igc` by running the following commands on the newly opened terminal:\n    ```bash\n    $ git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    $ export PATH=~/cloud-shell-commands:$PATH\n    $ source ./cloud-shell-commands/install.sh\n    ```\n- Successful installation will look something like this:\n    ```bash\n    $ git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    Cloning into 'cloud-shell-commands'...\n    remote: Enumerating objects: 50, done.\n    remote: Counting objects: 100% (50/50), done.\n    remote: Compressing objects: 100% (44/44), done.\n    remote: Total 50 (delta 23), reused 14 (delta 4), pack-reused 0\n        Unpacking objects: 100% (50/50), done.\n    Checking connectivity... done.\n    $ export PATH=~/cloud-shell-commands:$PATH\n    $ source ./cloud-shell-commands/install.sh\n    npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\n    npm WARN deprecated har-validator@5.1.5: this library is no longer supported\n    /home/ramragh1/.npm/bin/igc -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n    /home/ramragh1/.npm/bin/kubectl-dashboard -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-dashboard.js\n    /home/ramragh1/.npm/bin/kubectl-console -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-console.js\n    /home/ramragh1/.npm/bin/kubectl-enable -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-enable.js\n    /home/ramragh1/.npm/bin/kubectl-git -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-git.js\n    /home/ramragh1/.npm/bin/kubectl-endpoints -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-endpoints.js\n    /home/ramragh1/.npm/bin/kubectl-pipeline -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-pipeline.js\n    /home/ramragh1/.npm/bin/kubectl-git-secret -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-git-secret.js\n    /home/ramragh1/.npm/bin/kubectl-sync -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-namespace.js\n    /home/ramragh1/.npm/bin/kubectl-tool-config -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-tool-config.js\n    /home/ramragh1/.npm/bin/kubectl-igc -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script.js\n    /home/ramragh1/.npm/bin/kubectl-credentials -> /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/dist/script-credentials.js\n    > jsonpath@1.0.2 postinstall /home/ramragh1/.npm/lib/node_modules/@ibmgaragecloud/cloud-native-toolkit-cli/node_modules/jsonpath\n    > node lib/aesprim.js > generated/aesprim-browser.js\n\n    npm WARN ws@7.3.1 requires a peer of bufferutil@^4.0.1 but none is installed. You must install peer dependencies yourself.\n    npm WARN ws@7.3.1 requires a peer of utf-8-validate@^5.0.2 but none is installed. You must install peer dependencies yourself.\n\n    + @ibmgaragecloud/cloud-native-toolkit-cli@1.0.1\n    added 354 packages from 390 contributors in 26.049s\n\n    ```\n- You can check the CLI tools package was installed correctly by checking the `oc` version:\n    ```\n    $ oc sync --version\n    1.0.1\n    ```\n\n</Tab>\n\n</Tabs>\n\n## Log in to IBM Cloud\n\n- Use the `ibmcloud` command to log in to the cloud account. Replace the user_id, password and team name with the sandbox ones:\n    ```bash\n    $ ibmcloud login -u <user_id> -p <password> -g <workshop-team> -r us-south\n    ```\n\n- Select the account number you have been assigned to:\n    ```bash\n    $ ibmcloud login -u email@company.com -p XXX -g workshop-team-one -r us-south\n    API endpoint: https://cloud.ibm.com\n    Authenticating...\n    OK\n\n    Select an account:\n    1. GSI Labs - IBM\n    Enter a number> 1\n    Targeted account GSI Labs\n\n    Targeted resource group workshop-team-one\n\n    Targeted region us-south\n\n    API endpoint:      https://cloud.ibm.com\n    Region:            us-south\n    User:              email@company.com\n    Account:           GSI Labs\n    Resource group:    workshop-team-one\n    CF API endpoint:\n    Org:\n    Space:\n\n    ```\n\n## Log in to OpenShift Cluster\n\n- Log in to OpenShift Cluster from the cloud console:\n    ![OpenShift](./images/openshiftcluster.png)\n\n- Access the OpenShift console by clicking on the button:\n    ![OpenShift Console](./images/openshiftconsole.png)\n\n- Get the OpenShift login command, which includes a token:\n    ![OpenShift Login](./images/LoginCommand.png)\n\n- Run the login command in the terminal:\n    ```bash\n    $ oc login --token=qvARHflZDlOYfjJZRJUEs53Yfy4F8aa6_L3ezoagQFM --server=https://c103-e.us-south.containers.cloud.ibm.com:30979\n    Logged into \"https://c103-e.us-south.containers.cloud.ibm.com:30979\" as \"IAM#email@company\" using the token provided.\n\n    You have access to 71 projects, the list has been suppressed. You can list all projects with 'oc projects'\n\n    Using project \"dev-ab\".\n    ```\n\n### Configure git\n\n- Execute the following commands replacing the email and short name:\n\n  ```\n  $ git config --global user.email \"<email>\"\n  $ git config --global user.name \"<short_name>\"\n  ```\n","fileAbsolutePath":"/workspace/ibm-gsi-cloudnative-journey/src/pages/getting-started/devenvsetup/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","768070550"]}