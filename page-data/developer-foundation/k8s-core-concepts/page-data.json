{"componentChunkName":"component---src-pages-developer-foundation-k-8-s-core-concepts-index-mdx","path":"/developer-foundation/k8s-core-concepts/","result":{"pageContext":{"frontmatter":{"title":"Core Concepts","description":"Core Concepts of Kubernetes"},"relativePagePath":"/developer-foundation/k8s-core-concepts/index.mdx","titleType":"page","MdxNode":{"id":"2fd0a178-a45d-50fd-9416-064be7a15ec1","children":[],"parent":"5a3bb38f-78de-51a5-be6c-40da049a1b94","internal":{"content":"---\ntitle: Core Concepts\ndescription: Core Concepts of Kubernetes\n---\n\n<AnchorLinks>\n  <AnchorLink>Kubernetes API Primitives</AnchorLink>\n  <AnchorLink>Creating Pods</AnchorLink>\n  <AnchorLink>Namespaces</AnchorLink>\n</AnchorLinks>\n\n\n# Kubernetes API Primitives\n\nKubernetes API primitive, also known as Kubernetes objects, are the basic building blocks of any application running in Kubernetes\n\nExamples:\n- Pod\n- Node\n- Service\n- ServiceAccount\n\nTwo primary members\n- Spec, desired state\n- Status, current state\n\n## Resources\n\n**OpenShift**\n- [Pods](https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-using.html)\n- [Nodes](https://docs.openshift.com/container-platform/4.3/nodes/nodes/nodes-nodes-viewing.html)\n\n**IKS**\n- [Objects](https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/)\n- [Kube Basics](https://kubernetes.io/docs/tutorials/kubernetes-basics/)\n\n\n## References\n\n<Tabs>\n\n<Tab label=\"OpenShift\">\n\n**Prints all API Resources**\n  ```\n  oc api-resources\n  ```\n**Prints all API Resources with their verbs.**\n  ```\n  oc api-resources -o wide\n  ```\n**Prints all API Resources names only**\n  ```\n  oc api-resources -o name\n  ```\n  **Prints each of the available nodes, projects, services, deployments, and pods ** \n  ```\n  oc get nodes,ns,po,deploy,svc\n  ```\n**Prints the node's description**\n  ```\n  oc describe node \n  ```\n</Tab>\n\n<Tab label=\"IKS\">\n\n** Getting API Resources **\n```\nkubectl api-resources\n```\n** Viewing Resources **\n```\nkubectl api-resources -o wide\n```\n** Viewing Resources **\n```\nkubectl api-resources -o name\n```\n** Getting a list of specific objects **\n```\nkubectl get nodes,ns,po,deploy,svc\n```\n** Describing the resources **\n```\nkubectl describe node --all\n```\n</Tab>\n\n</Tabs>\n\n# Creating Pods\nA Pod is the basic execution unit of a Kubernetes application–the smallest and simplest unit in the Kubernetes object model that you create or deploy. A Pod represents processes running on your Cluster.\n\nA Pod encapsulates an application’s container (or, in some cases, multiple containers), storage resources, a unique network IP, and options that govern how the container(s) should run. A Pod represents a unit of deployment: a single instance of an application in Kubernetes, which might consist of either a single container or a small number of containers that are tightly coupled and that share resources.\n\n## Resources\n\n**OpenShift**\n- [About Pods](https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-using.html)\n- [Cluster Configuration for Pods](https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-configuring.html)\n- [Pod Autoscaling](https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-autoscaling.html)\n\n**IKS**\n- [Pod Overview](https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/)\n- [Pod Lifecycle](https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/)\n- [Pod Usage](https://kubernetes.io/docs/concepts/workloads/pods/pod/)\n\n## References\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: myapp-pod\n  labels:\n    app: myapp\nspec:\n  containers:\n  - name: myapp-container\n    image: busybox\n    command: ['sh', '-c', 'echo Hello Kubernetes! && sleep 3600']\n```\n\n<Tabs>\n<Tab label=\"OpenShift\">\n\n** Get Current Pods in Project **\n```\noc get pods\n``` \n** Get Pod's Description **\n``` \noc describe pod <pod-name>\n```\n** Get Pods with their IP and node location **\n```\noc get pods -o wide\n```\n** Get Pods Stats **\n```\noc adm top pods\n```\n</Tab>\n\n<Tab label=\"IKS\">\n\n** Get Current Pods in Project **\n```\nkubectl get pods\n``` \n** Get Pod's Description **\n``` \nkubectl describe pod <pod-name>\n```\n** Delete a Pod **\n```\nkubectl delete pod <pod-name>\n```\n** Edit a Pod **\n```\nkubectl edit pod <pod-name>\n```\n</Tab>\n\n</Tabs>\n\n# Projects/Namespaces\n\nNamespaces are intended for use in environments with many users spread across multiple teams, or projects.\n\nNamespaces provide a scope for names. Names of resources need to be unique within a namespace, but not across namespaces.\n\nNamespaces are a way to divide cluster resources between multiple users (via resource quota).\n\nIt is not necessary to use multiple namespaces just to separate slightly different resources, such as different versions of the same software: use labels to distinguish resources within the same namespace. In practice namespaces are used to deploy different versions based on stages of the CICD pipeline (dev, test, stage, prod)\n\n## Resources\n\n**OpenShift**\n- [Working With Projects](https://docs.openshift.com/container-platform/4.3/applications/projects/working-with-projects.html)\n- [Creating Projects](https://docs.openshift.com/container-platform/4.3/cli_reference/openshift_cli/getting-started-cli.html#creating-a-project)\n- [Configure Project Creation](https://docs.openshift.com/container-platform/4.3/applications/projects/configuring-project-creation.html)\n\n**IKS**\n- [Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/)\n\n## References:\n\n```yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: foo\n```\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: myapp-pod\n  namespace: bar\n  labels:\n    app: myapp\nspec:\n  containers:\n  - name: myapp-container\n    image: busybox\n    command: ['sh', '-c', 'echo Hello Kubernetes! && sleep 3600']\n```\n\n<Tabs>\n\n<Tab label=\"OpenShift\">\n\n**Create a new Project** \n\n```\noc new-project my-project\n```\n\n**Viewing Current Project**\n\n```\noc project\n```\n\n**Viewing Project Status**\n\n```\noc status\n```\n\n</Tab>\n\n<Tab label=\"IKS\">\n\n**Getting all namespaces in cluster** \n```\nkubectl get namespaces\n```\n\n**Create a new namespace called bar**\n``` \nkubectl create ns bar\n```\n**Setting Namespace in Context**\n``` \nkubectl set-context --current --namespace=bar\n```\n</Tab>\n\n</Tabs>","type":"Mdx","contentDigest":"d33d85951443ba804c50ef86477684ef","owner":"gatsby-plugin-mdx","counter":927},"frontmatter":{"title":"Core Concepts","description":"Core Concepts of Kubernetes"},"exports":{},"rawBody":"---\ntitle: Core Concepts\ndescription: Core Concepts of Kubernetes\n---\n\n<AnchorLinks>\n  <AnchorLink>Kubernetes API Primitives</AnchorLink>\n  <AnchorLink>Creating Pods</AnchorLink>\n  <AnchorLink>Namespaces</AnchorLink>\n</AnchorLinks>\n\n\n# Kubernetes API Primitives\n\nKubernetes API primitive, also known as Kubernetes objects, are the basic building blocks of any application running in Kubernetes\n\nExamples:\n- Pod\n- Node\n- Service\n- ServiceAccount\n\nTwo primary members\n- Spec, desired state\n- Status, current state\n\n## Resources\n\n**OpenShift**\n- [Pods](https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-using.html)\n- [Nodes](https://docs.openshift.com/container-platform/4.3/nodes/nodes/nodes-nodes-viewing.html)\n\n**IKS**\n- [Objects](https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/)\n- [Kube Basics](https://kubernetes.io/docs/tutorials/kubernetes-basics/)\n\n\n## References\n\n<Tabs>\n\n<Tab label=\"OpenShift\">\n\n**Prints all API Resources**\n  ```\n  oc api-resources\n  ```\n**Prints all API Resources with their verbs.**\n  ```\n  oc api-resources -o wide\n  ```\n**Prints all API Resources names only**\n  ```\n  oc api-resources -o name\n  ```\n  **Prints each of the available nodes, projects, services, deployments, and pods ** \n  ```\n  oc get nodes,ns,po,deploy,svc\n  ```\n**Prints the node's description**\n  ```\n  oc describe node \n  ```\n</Tab>\n\n<Tab label=\"IKS\">\n\n** Getting API Resources **\n```\nkubectl api-resources\n```\n** Viewing Resources **\n```\nkubectl api-resources -o wide\n```\n** Viewing Resources **\n```\nkubectl api-resources -o name\n```\n** Getting a list of specific objects **\n```\nkubectl get nodes,ns,po,deploy,svc\n```\n** Describing the resources **\n```\nkubectl describe node --all\n```\n</Tab>\n\n</Tabs>\n\n# Creating Pods\nA Pod is the basic execution unit of a Kubernetes application–the smallest and simplest unit in the Kubernetes object model that you create or deploy. A Pod represents processes running on your Cluster.\n\nA Pod encapsulates an application’s container (or, in some cases, multiple containers), storage resources, a unique network IP, and options that govern how the container(s) should run. A Pod represents a unit of deployment: a single instance of an application in Kubernetes, which might consist of either a single container or a small number of containers that are tightly coupled and that share resources.\n\n## Resources\n\n**OpenShift**\n- [About Pods](https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-using.html)\n- [Cluster Configuration for Pods](https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-configuring.html)\n- [Pod Autoscaling](https://docs.openshift.com/container-platform/4.3/nodes/pods/nodes-pods-autoscaling.html)\n\n**IKS**\n- [Pod Overview](https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/)\n- [Pod Lifecycle](https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/)\n- [Pod Usage](https://kubernetes.io/docs/concepts/workloads/pods/pod/)\n\n## References\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: myapp-pod\n  labels:\n    app: myapp\nspec:\n  containers:\n  - name: myapp-container\n    image: busybox\n    command: ['sh', '-c', 'echo Hello Kubernetes! && sleep 3600']\n```\n\n<Tabs>\n<Tab label=\"OpenShift\">\n\n** Get Current Pods in Project **\n```\noc get pods\n``` \n** Get Pod's Description **\n``` \noc describe pod <pod-name>\n```\n** Get Pods with their IP and node location **\n```\noc get pods -o wide\n```\n** Get Pods Stats **\n```\noc adm top pods\n```\n</Tab>\n\n<Tab label=\"IKS\">\n\n** Get Current Pods in Project **\n```\nkubectl get pods\n``` \n** Get Pod's Description **\n``` \nkubectl describe pod <pod-name>\n```\n** Delete a Pod **\n```\nkubectl delete pod <pod-name>\n```\n** Edit a Pod **\n```\nkubectl edit pod <pod-name>\n```\n</Tab>\n\n</Tabs>\n\n# Projects/Namespaces\n\nNamespaces are intended for use in environments with many users spread across multiple teams, or projects.\n\nNamespaces provide a scope for names. Names of resources need to be unique within a namespace, but not across namespaces.\n\nNamespaces are a way to divide cluster resources between multiple users (via resource quota).\n\nIt is not necessary to use multiple namespaces just to separate slightly different resources, such as different versions of the same software: use labels to distinguish resources within the same namespace. In practice namespaces are used to deploy different versions based on stages of the CICD pipeline (dev, test, stage, prod)\n\n## Resources\n\n**OpenShift**\n- [Working With Projects](https://docs.openshift.com/container-platform/4.3/applications/projects/working-with-projects.html)\n- [Creating Projects](https://docs.openshift.com/container-platform/4.3/cli_reference/openshift_cli/getting-started-cli.html#creating-a-project)\n- [Configure Project Creation](https://docs.openshift.com/container-platform/4.3/applications/projects/configuring-project-creation.html)\n\n**IKS**\n- [Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/)\n\n## References:\n\n```yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: foo\n```\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: myapp-pod\n  namespace: bar\n  labels:\n    app: myapp\nspec:\n  containers:\n  - name: myapp-container\n    image: busybox\n    command: ['sh', '-c', 'echo Hello Kubernetes! && sleep 3600']\n```\n\n<Tabs>\n\n<Tab label=\"OpenShift\">\n\n**Create a new Project** \n\n```\noc new-project my-project\n```\n\n**Viewing Current Project**\n\n```\noc project\n```\n\n**Viewing Project Status**\n\n```\noc status\n```\n\n</Tab>\n\n<Tab label=\"IKS\">\n\n**Getting all namespaces in cluster** \n```\nkubectl get namespaces\n```\n\n**Create a new namespace called bar**\n``` \nkubectl create ns bar\n```\n**Setting Namespace in Context**\n``` \nkubectl set-context --current --namespace=bar\n```\n</Tab>\n\n</Tabs>","fileAbsolutePath":"/home/runner/work/ibm-gsi-cloudnative-journey/ibm-gsi-cloudnative-journey/src/pages/developer-foundation/k8s-core-concepts/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","768070550"]}