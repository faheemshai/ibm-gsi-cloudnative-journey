{"componentChunkName":"component---src-pages-developer-foundation-activities-labs-lab-10-index-mdx","path":"/developer-foundation/activities/labs/lab10/","result":{"pageContext":{"frontmatter":{"title":"Kubernetes Lab 10 - Persistent Volumes"},"relativePagePath":"/developer-foundation/activities/labs/lab10/index.mdx","titleType":"page","MdxNode":{"id":"2aa8a46c-72e1-5237-9c89-eb4c56b9230a","children":[],"parent":"7837a20b-7947-5ac8-b78c-008873fcf147","internal":{"content":"---\ntitle: Kubernetes Lab 10 - Persistent Volumes\n---\n\n## Problem\n\nThe death star plans can't be lost no matter what happens so we need to make sure we protect them at all costs.\n\n\n## Solution\n\nIn order to do that you will need to do the following:\n\n\n### Create a `PersistentVolume`:\n\n- The PersistentVolume should be named `postgresql-pv`.\n\n- The volume needs a capacity of `1Gi`.\n\n- Use a storageClassName of `localdisk`.\n\n- Use the accessMode `ReadWriteOnce`.\n\n- Store the data locally on the node using a `hostPath` volume at the location `/mnt/data`.\n\n- Execute the below commands to creating PersistentVolume using yaml definition.\n\n ```shell script\n  oc apply -f pv.yaml -n {DEV_NAMESPACE}\n  ```  \n\n ```yaml\n    apiVersion: v1\n    kind: PersistentVolume\n    metadata:\n    name: postgresql-pv\n    spec:\n    storageClassName: localdisk\n    capacity:\n        storage: 1Gi\n    accessModes:\n        - ReadWriteOnce\n    hostPath:\n        path: \"/mnt/data\"\n  ```\n\n\n### Create a `PersistentVolumeClaim`:\n\n- The PersistentVolumeClaim should be named `postgresql-pv-claim`.\n\n- Set a resource request on the claim for `500Mi` of storage.\n\n- Use the same storageClassName and accessModes as the PersistentVolume so that this claim can bind to the PersistentVolume.\n\n- Execute the below commands to creating PersistentVolumeClaim using yaml definition.\n\n ```shell script\n  oc apply -f pvc.yaml -n {DEV_NAMESPACE}\n  ```  \n\n ```yaml\n    apiVersion: v1\n    kind: PersistentVolumeClaim\n    metadata:\n    name: postgresql-pv-claim\n    spec:\n    storageClassName: localdisk\n    accessModes:\n        - ReadWriteOnce\n    resources:\n        requests:\n        storage: 500Mi\n  ```\n\n### Create a `Postgresql` Pod configured to use the `PersistentVolumeClaim`:\n\n- The Pod should be named `postgresql-pod`.\n\n- Use the image `bitnami/postgresql`.\n\n- Expose the containerPort `5432`.\n\n- Set an `environment variable` called `MYSQL_ROOT_PASSWORD` with the value `password`.\n\n- Add the `PersistentVolumeClaim` as a volume and mount it to the container at the path `/bitnami/postgresql/`.\n\n- Execute the below commands to creating POD using yaml definition.\n\n ```shell script\n  oc apply -f postgresql-pod.yaml -n {DEV_NAMESPACE}\n  ``` \n\n ```yaml\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    name: postgresql-pod\n    spec:\n    containers:\n    - name: postgresql\n        image: bitnami/postgresql\n        ports:\n        - containerPort: 5432\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n        value: password\n        volumeMounts:\n        - name: sql-storage\n        mountPath: /bitnami/postgresql/\n    volumes:\n    - name: sql-storage\n        persistentVolumeClaim:\n        claimName: postgresql-pv-claim\n  ```\n\n","type":"Mdx","contentDigest":"759825940c2bce66d82607d858a14a0e","owner":"gatsby-plugin-mdx","counter":1084},"frontmatter":{"title":"Kubernetes Lab 10 - Persistent Volumes"},"exports":{},"rawBody":"---\ntitle: Kubernetes Lab 10 - Persistent Volumes\n---\n\n## Problem\n\nThe death star plans can't be lost no matter what happens so we need to make sure we protect them at all costs.\n\n\n## Solution\n\nIn order to do that you will need to do the following:\n\n\n### Create a `PersistentVolume`:\n\n- The PersistentVolume should be named `postgresql-pv`.\n\n- The volume needs a capacity of `1Gi`.\n\n- Use a storageClassName of `localdisk`.\n\n- Use the accessMode `ReadWriteOnce`.\n\n- Store the data locally on the node using a `hostPath` volume at the location `/mnt/data`.\n\n- Execute the below commands to creating PersistentVolume using yaml definition.\n\n ```shell script\n  oc apply -f pv.yaml -n {DEV_NAMESPACE}\n  ```  \n\n ```yaml\n    apiVersion: v1\n    kind: PersistentVolume\n    metadata:\n    name: postgresql-pv\n    spec:\n    storageClassName: localdisk\n    capacity:\n        storage: 1Gi\n    accessModes:\n        - ReadWriteOnce\n    hostPath:\n        path: \"/mnt/data\"\n  ```\n\n\n### Create a `PersistentVolumeClaim`:\n\n- The PersistentVolumeClaim should be named `postgresql-pv-claim`.\n\n- Set a resource request on the claim for `500Mi` of storage.\n\n- Use the same storageClassName and accessModes as the PersistentVolume so that this claim can bind to the PersistentVolume.\n\n- Execute the below commands to creating PersistentVolumeClaim using yaml definition.\n\n ```shell script\n  oc apply -f pvc.yaml -n {DEV_NAMESPACE}\n  ```  \n\n ```yaml\n    apiVersion: v1\n    kind: PersistentVolumeClaim\n    metadata:\n    name: postgresql-pv-claim\n    spec:\n    storageClassName: localdisk\n    accessModes:\n        - ReadWriteOnce\n    resources:\n        requests:\n        storage: 500Mi\n  ```\n\n### Create a `Postgresql` Pod configured to use the `PersistentVolumeClaim`:\n\n- The Pod should be named `postgresql-pod`.\n\n- Use the image `bitnami/postgresql`.\n\n- Expose the containerPort `5432`.\n\n- Set an `environment variable` called `MYSQL_ROOT_PASSWORD` with the value `password`.\n\n- Add the `PersistentVolumeClaim` as a volume and mount it to the container at the path `/bitnami/postgresql/`.\n\n- Execute the below commands to creating POD using yaml definition.\n\n ```shell script\n  oc apply -f postgresql-pod.yaml -n {DEV_NAMESPACE}\n  ``` \n\n ```yaml\n    apiVersion: v1\n    kind: Pod\n    metadata:\n    name: postgresql-pod\n    spec:\n    containers:\n    - name: postgresql\n        image: bitnami/postgresql\n        ports:\n        - containerPort: 5432\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n        value: password\n        volumeMounts:\n        - name: sql-storage\n        mountPath: /bitnami/postgresql/\n    volumes:\n    - name: sql-storage\n        persistentVolumeClaim:\n        claimName: postgresql-pv-claim\n  ```\n\n","fileAbsolutePath":"/workspace/ibm-gsi-cloudnative-journey/src/pages/developer-foundation/activities/labs/lab10/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","768070550"]}