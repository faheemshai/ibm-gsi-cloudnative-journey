{"componentChunkName":"component---src-pages-developer-advanced-1-mongodb-integration-index-mdx","path":"/developer-advanced-1/mongodb-integration/","result":{"pageContext":{"frontmatter":{"title":"MongoDB Integration"},"relativePagePath":"/developer-advanced-1/mongodb-integration/index.mdx","titleType":"page","MdxNode":{"id":"77ea6bff-18de-5983-b662-80df341c5279","children":[],"parent":"d9351b4a-520e-55d9-997f-9ed383171d23","internal":{"content":"---\ntitle: MongoDB Integration\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nAdd the MongoDB using operator\n\n</PageDescription>\n\n- Open the Openshift Web Console.\n\n- Choose the Developer option.\n\n- Click on the Add on the left-hand menu and Choose Database.\n\n ![Database](/images/database-catalog.png)\n\n- Select  the MongoDB Tile on the Developer Catalog.\n\n ![MongoDB](/images/mongodb.png)\n\n- Clicking on MongoDB its open the template page. Click the Instantiate Template button.\n\n- Open MongoDB Configuration page. Enter the necessary infomation such as `Database Service Name, MongoDB Connection Username, MongoDB Connection Password, MongoDB Database Name, MongoDB Admin Password, Volume Capacity etc..`.\n\n- Click create button and it will create MongoDB Instance.\n\n ![Db Configuration](/images/mongodb-configuration.png)\n\n- This MongoDB Operator create following resource in Openshift Web console.\n\n     1. DeploymentConfig.\n     2. PersistentVolumeClaim.\n     3. Secret.\n     4. Service.\n\n- In the Topology view click the MongoDB Instance. Click on the service will get connection IP and Port details.\n\n\n## Load the data into MongoDB POD\n\n- Execute the following command with sample data.\n- Give respective details such `POD NAME, COLLECTION NAME, MongoDB URI`  while executing command.\n\n   ```bash\n   oc exec -it ${POD} -- bash -c \"mongoimport  -u admin -p password --db ${COLLECTION-NAME} --collection user --jsonArray --mode insert --drop\" < sample.json\n   #mongoimport --uri ${URI} --collection user --file users.json --jsonArray --mode insert --drop\n   ```\n","type":"Mdx","contentDigest":"64b888c943005a67b8e3ce116a7dc9f6","owner":"gatsby-plugin-mdx","counter":933},"frontmatter":{"title":"MongoDB Integration"},"exports":{},"rawBody":"---\ntitle: MongoDB Integration\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nAdd the MongoDB using operator\n\n</PageDescription>\n\n- Open the Openshift Web Console.\n\n- Choose the Developer option.\n\n- Click on the Add on the left-hand menu and Choose Database.\n\n ![Database](/images/database-catalog.png)\n\n- Select  the MongoDB Tile on the Developer Catalog.\n\n ![MongoDB](/images/mongodb.png)\n\n- Clicking on MongoDB its open the template page. Click the Instantiate Template button.\n\n- Open MongoDB Configuration page. Enter the necessary infomation such as `Database Service Name, MongoDB Connection Username, MongoDB Connection Password, MongoDB Database Name, MongoDB Admin Password, Volume Capacity etc..`.\n\n- Click create button and it will create MongoDB Instance.\n\n ![Db Configuration](/images/mongodb-configuration.png)\n\n- This MongoDB Operator create following resource in Openshift Web console.\n\n     1. DeploymentConfig.\n     2. PersistentVolumeClaim.\n     3. Secret.\n     4. Service.\n\n- In the Topology view click the MongoDB Instance. Click on the service will get connection IP and Port details.\n\n\n## Load the data into MongoDB POD\n\n- Execute the following command with sample data.\n- Give respective details such `POD NAME, COLLECTION NAME, MongoDB URI`  while executing command.\n\n   ```bash\n   oc exec -it ${POD} -- bash -c \"mongoimport  -u admin -p password --db ${COLLECTION-NAME} --collection user --jsonArray --mode insert --drop\" < sample.json\n   #mongoimport --uri ${URI} --collection user --file users.json --jsonArray --mode insert --drop\n   ```\n","fileAbsolutePath":"/workspace/ibm-gsi-cloudnative-journey/src/pages/developer-advanced-1/mongodb-integration/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","768070550"]}