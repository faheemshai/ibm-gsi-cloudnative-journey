(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{"013z":function(e,t,n){"use strict";var a=n("q1tI"),r=n.n(a),l=n("NmYn"),o=n.n(l),c=n("Wbzz"),i=n("Xrax"),b=n("k4MR"),s=n("TSYQ"),p=n.n(s),d=n("QH2O"),u=n.n(d),m=n("qKvR"),h=function(e){var t,n=e.title,a=e.theme,r=e.tabs,l=void 0===r?[]:r;return Object(m.b)("div",{className:p()(u.a.pageHeader,(t={},t[u.a.withTabs]=l.length,t[u.a.darkMode]="dark"===a,t))},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12"},Object(m.b)("h1",{id:"page-title",className:u.a.text},n)))))},O=n("BAC9"),j=function(e){var t=e.relativePagePath,n=e.repository,a=Object(c.useStaticQuery)("1364590287").site.siteMetadata.repository,r=n||a,l=r.baseUrl,o=r.subDirectory,i=l+"/edit/"+r.branch+o+"/src/pages"+t;return l?Object(m.b)("div",{className:"bx--row "+O.row},Object(m.b)("div",{className:"bx--col"},Object(m.b)("a",{className:O.link,href:i},"Edit this page on GitHub"))):null},g=n("FCXl"),x=n("dI71"),f=n("I8xM"),y=function(e){function t(){return e.apply(this,arguments)||this}return Object(x.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,a=e.slug,r=a.split("/").filter(Boolean).slice(-1)[0],l=n.map((function(e){var t,n=o()(e,{lower:!0,strict:!0}),l=n===r,i=new RegExp(r+"/?(#.*)?$"),b=a.replace(i,n);return Object(m.b)("li",{key:e,className:p()((t={},t[f.selectedItem]=l,t),f.listItem)},Object(m.b)(c.Link,{className:f.link,to:""+b},e))}));return Object(m.b)("div",{className:f.tabsContainer},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(m.b)("nav",{"aria-label":t},Object(m.b)("ul",{className:f.list},l))))))},t}(r.a.Component),w=n("MjG9"),N=n("CzIb"),v=n("Asxa"),k=n("OIbQ"),C=n.n(k),T=function(e){var t=e.date,n=new Date(t);return t?Object(m.b)(v.c,{className:C.a.row},Object(m.b)(v.a,null,Object(m.b)("div",{className:C.a.text},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=function(e){var t=e.pageContext,n=e.children,a=e.location,r=e.Title,l=t.frontmatter,s=void 0===l?{}:l,p=t.relativePagePath,d=t.titleType,u=s.tabs,O=s.title,x=s.theme,f=s.description,v=s.keywords,k=s.date,C=Object(N.a)().interiorTheme,D=Object(c.useStaticQuery)("2456312558").site.pathPrefix,E=D?a.pathname.replace(D,""):a.pathname,I=u?E.split("/").filter(Boolean).slice(-1)[0]||o()(u[0],{lower:!0}):"",P=x||C;return Object(m.b)(b.a,{tabs:u,homepage:!1,theme:P,pageTitle:O,pageDescription:f,pageKeywords:v,titleType:d},Object(m.b)(h,{title:r?Object(m.b)(r,null):O,label:"label",tabs:u,theme:P}),u&&Object(m.b)(y,{title:O,slug:E,tabs:u,currentTab:I}),Object(m.b)(w.a,{padded:!0},n,Object(m.b)(j,{relativePagePath:p}),Object(m.b)(T,{date:k})),Object(m.b)(g.a,{pageContext:t,location:a,slug:E,tabs:u,currentTab:I}),Object(m.b)(i.a,null))}},BAC9:function(e,t,n){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,n){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,t,n){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,n){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},fSpW:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n("wx14"),r=n("zLVn"),l=(n("q1tI"),n("7ljp")),o=n("013z"),c=(n("T0C+"),n("qKvR"),{}),i={_frontmatter:c},b=o.a;function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)(b,Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",null,"Creating Helm-based Operators to install NGINX Webserver on ROKS 4.4 using the Operator SDK"),Object(l.b)("h3",null,"Install the Operator SDK CLI"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install from Homebrew (macOS)"),Object(l.b)("li",{parentName:"ul"},"Install from GitHub release"),Object(l.b)("li",{parentName:"ul"},"Compile and install from master")),Object(l.b)("p",null,"Visit here for more details: ",Object(l.b)("a",{parentName:"p",href:"https://sdk.operatorframework.io/docs/installation/"},"https://sdk.operatorframework.io/docs/installation/")),Object(l.b)("h3",null,"Installing from Homebrew (MacOS)"),Object(l.b)("p",null,"You can install the SDK CLI using Homebrew. "),Object(l.b)("h3",null,"Prerequisites"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Homebrew"),Object(l.b)("li",{parentName:"ul"},"docker v17.03+, podman v1.2.0+, or buildah v1.7+"),Object(l.b)("li",{parentName:"ul"},"OpenShift CLI (oc) 4.4+ installed"),Object(l.b)("li",{parentName:"ul"},"Access to a cluster based on Kubernetes v1.12.0+"),Object(l.b)("li",{parentName:"ul"},"Access to a container registry ")),Object(l.b)("h3",null,"Procedure"),Object(l.b)("p",null,"Install the SDK CLI using the brew command:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ brew install operator-sdk \n")),Object(l.b)("p",null,"Verify that the CLI tool was installed correctly:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ operator-sdk version\n")),Object(l.b)("h3",null,"Building a Helm-based Operator using the Operator SDK"),Object(l.b)("p",null,"This procedure walks through an example of building a simple Nginx Operator powered by a Helm chart using tools and libraries provided by the Operator SDK. "),Object(l.b)("h4",null,"Create a new Operator project"),Object(l.b)("p",null,"To create a new Helm-based, namespace-scoped nginx-operator project, use the following command:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ operator-sdk new nginx-operator \\\n    --api-version=example.com/v1alpha1 \\\n    --kind=Nginx \\\n    --type=helm\n\n  $ cd nginx-operator\n")),Object(l.b)("p",null,"This creates the nginx-operator project specifically for watching the Nginx resource with APIVersion example.com/v1apha1 and Kind Nginx."),Object(l.b)("h4",null,"Deploy the CRD"),Object(l.b)("p",null,"Before running the Operator, Kubernetes needs to know about the new custom resource definition (CRD) the operator will be watching. Deploy the following CRD:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ oc create -f deploy/crds/example_v1alpha1_nginx_crd.yaml\n")),Object(l.b)("h4",null,"Build and run the Operator."),Object(l.b)("p",null,"There are two ways to build and run the Operator:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"As a Pod inside a Kubernetes cluster."),Object(l.b)("li",{parentName:"ul"},"As a Go/Helm/Ansible program outside the cluster using the operator-sdk up command. ")),Object(l.b)("h5",null,"Build the nginx-operator image and push it to a registry:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ operator-sdk build docker.io/$DOCKER_USERNAME/nginx-operator:v0.0.1\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ docker login docker.io -u $DOCKER_USERNAME -p $DOCKER_PASSWORD\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ docker push docker.io/$DOCKER_USERNAME/nginx-operator:v0.0.1\n")),Object(l.b)("h5",null,"Deployment manifests are generated in the deploy/operator.yaml file."),Object(l.b)("p",null,"The deployment image in this file needs to be modified from the placeholder REPLACE_IMAGE to the previous built image. To do this, run:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ sed -i 's|REPLACE_IMAGE|docker.io/$DOCKER_USERNAME/nginx-operator:v0.0.1|g' deploy/operator.yaml\n")),Object(l.b)("p",null,"Note: If you are performing these steps on OSX, use the following sed command instead:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ sed -i \"\" 's|REPLACE_IMAGE|docker.io/$DOCKER_USERNAME/nginx-operator:v0.0.1|g' deploy/operator.yaml\n")),Object(l.b)("h5",null,"Deploy the nginx-operator:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ oc create -f deploy/service_account.yaml\n  $ oc create -f deploy/role.yaml\n  $ oc create -f deploy/role_binding.yaml\n  $ oc create -f deploy/operator.yaml\n")),Object(l.b)("h5",null,"Verify that the nginx-operator is up and running:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ oc get deployment\n")),Object(l.b)("h4",null,"Deploy the Nginx CR."),Object(l.b)("p",null,"  Apply the Nginx CR that you modified earlier:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ oc apply -f deploy/crds/example.com_v1alpha1_nginx_cr.yaml\n")),Object(l.b)("p",null,"  Ensure that the nginx-operator creates the Deployment for the CR:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ oc get deployment\n")),Object(l.b)("p",null,"  Check the Pods to confirm two replicas were created:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ oc get pods\n")),Object(l.b)("h4",null,"Note:"),Object(l.b)("p",null,"The result is actually a failure. Well, that is frustrating - helm install reported that the chart was deployed. From a helm perspective I think this is fair since it did its job and the objects have been created in the environment, however, the pod was unable to come up.\nThis was because of the container is attempting to run as root which is naughty. We find this out by inspecting the pod logs."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'[warn] 1#1: the "user" directive makes sense only if the master process runs with super-user privileges, ignored in /etc/nginx/nginx.conf:2\nnginx: [warn] the "user" directive makes sense only if the master process runs with super-user privileges, ignored in /etc/nginx/nginx.conf:2\n[emerg] 1#1: mkdir() "/var/cache/nginx/client_temp" failed (13: Permission denied)\nnginx: [emerg] mkdir() "/var/cache/nginx/client_temp" failed (13: Permission denied)\n')),Object(l.b)("p",null,"Let’s add the serviceaccount to the anyuid scc and proceed."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"}," oc get sa\nNAME                 SECRETS   AGE\nbuilder              2         134m\ndefault              2         134m\ndeployer             2         134m\nexample-nginx        2         72m\nmemcached-operator   2         106m\nnginx-operator       2         73m\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'bash-5.0$ oc adm policy add-scc-to-user anyuid -z example-nginx\n\nsecuritycontextconstraints.security.openshift.io/anyuid added to: ["system:serviceaccount:dev-op:example-nginx"]\n')),Object(l.b)("p",null,"Delete the pod from the OpenShift Console which will recreate the POD"),Object(l.b)("p",null," ",Object(l.b)("img",{parentName:"p",src:"../images/ApplyCR.png",alt:"Model"})),Object(l.b)("h4",null,"Update the replicaCount"),Object(l.b)("p",null,"Change the spec.replicaCount field from 2 to 3, remove the spec.service field, and apply the change:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ cat deploy/crds/example.com_v1alpha1_nginx_cr.yaml\n\n  $ oc apply -f deploy/crds/example.com_v1alpha1_nginx_cr.yaml\n")),Object(l.b)("p",null,"Confirm that the Operator changes the Deployment size:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ oc get deployment\n")),Object(l.b)("p",null,"Check that the Service port is set to the default 80:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ oc get service\n")),Object(l.b)("h4",null,"Create Route for the service & Access via browser"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Create the Route for the example nginx service")),Object(l.b)("img",{src:"../images/RouteCreate.png",alt:"Model"}),Object(l.b)("img",{src:"../images/RouteAccess.png",alt:"Model"}),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Access the route url from the browser for verification")),Object(l.b)("img",{src:"../images/NginxAccess.png",alt:"Model"}),Object(l.b)("p",null,"This demonstrates how you use operator sdk to develop the helm based operator for the nginx web server which is successfully installed and working"),Object(l.b)("h4",null,"Clean up the resources:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"  $ oc delete -f deploy/crds/example.com_v1alpha1_nginx_cr.yaml\n  $ oc delete -f deploy/operator.yaml\n  $ oc delete -f deploy/role_binding.yaml\n  $ oc delete -f deploy/role.yaml\n  $ oc delete -f deploy/service_account.yaml\n  $ oc delete -f deploy/crds/example_v1alpha1_nginx_crd.yaml\n")),Object(l.b)("h2",null,"Write your own operator"),Object(l.b)("p",null,"To write your own operator you can use existing tools:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"KUDO (Kubernetes Universal Declarative Operator),"),Object(l.b)("li",{parentName:"ul"},"kubebuilder,"),Object(l.b)("li",{parentName:"ul"},"Metacontroller using custom WebHooks,"),Object(l.b)("li",{parentName:"ul"},"the Operator Framework.")),Object(l.b)("p",null,"The Operator SDK provides the following workflow to develop a new Operator:"),Object(l.b)("p",null,"The following workflow is for a new Go operator:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Create a new operator project using the SDK Command Line Interface(CLI)"),Object(l.b)("li",{parentName:"ul"},"Define new resource APIs by adding Custom Resource Definitions(CRD)"),Object(l.b)("li",{parentName:"ul"},"Define Controllers to watch and reconcile resources"),Object(l.b)("li",{parentName:"ul"},"Write the reconciling logic for your Controller using the SDK and controller-runtime APIs"),Object(l.b)("li",{parentName:"ul"},"Use the SDK CLI to build and generate the operator deployment manifests")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-developer-advanced-2-operator-lab-lab-index-mdx-58ab93cf832afce4c4fc.js.map